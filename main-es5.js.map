{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/add-branch/add-branch.component.ts","webpack:///src/app/admin/add-branch/add-branch.component.html","webpack:///src/app/admin/add-staff/add-staff.component.ts","webpack:///src/app/admin/add-staff/add-staff.component.html","webpack:///src/app/admin/admin-function/admin-function.component.ts","webpack:///src/app/admin/admin-function/admin-function.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/doctor/doctor.component.ts","webpack:///src/app/doctor/doctor.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/service/database-service.service.ts","webpack:///src/app/service/staff.service.ts","webpack:///src/app/staff/add-patient/add-patient.component.ts","webpack:///src/app/staff/add-patient/add-patient.component.html","webpack:///src/app/staff/patient-info/patient-info.component.ts","webpack:///src/app/staff/patient-info/patient-info.component.html","webpack:///src/app/staff/staff-function/staff-function.component.ts","webpack:///src/app/staff/staff-function/staff-function.component.html","webpack:///src/app/staff/staff.component.ts","webpack:///src/app/staff/staff.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddBranchComponent","selector","templateUrl","styleUrls","AddStaffComponent","AdminFunctionComponent","dialog","dialogRef","open","afterClosed","subscribe","result","console","log","openDialog1","openDialog2","AdminComponent","auth","eventAuthError$","data","authError","frm","createUser","value","openDialog","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","openDialog3","AppModule","initializeApp","firebase","declarations","providers","bootstrap","DoctorComponent","MaterialComponent","MaterialModule","DatabaseServiceService","afauth","db","router","eventAuthError","asObservable","user","createUserWithEmailAndPassword","email","psw","userCredential","newUser","updateProfile","displayName","firstname","lastname","insertUserData","navigate","error","next","doc","set","pswRepeat","providedIn","StaffService","specialist","branch","AddPatientComponent","PatientInfoComponent","StaffFunctionComponent","StaffComponent","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-branch',\n  templateUrl: './add-branch.component.html',\n  styleUrls: ['./add-branch.component.css']\n})\nexport class AddBranchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-branch works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-staff',\n  templateUrl: './add-staff.component.html',\n  styleUrls: ['./add-staff.component.css']\n})\nexport class AddStaffComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n* {\n  box-sizing: border-box;\n}\n\ninput[type=text], select, textarea {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n}\n\nlabel {\n  padding: 12px 12px 12px 0;\n  display: inline-block;\n}\n\ninput[type=submit] {\n  background-color: #4CAF50;\n  color: white;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n}\n\ninput[type=submit]:hover {\n  background-color: #45a049;\n}\n\n.container {\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n}\n\n.col-25 {\n  float: left;\n  width: 25%;\n  margin-top: 6px;\n}\n\n.col-75 {\n  float: left;\n  width: 75%;\n  margin-top: 6px;\n}\n\n/* Clear floats after the columns */\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n  .col-25, .col-75, input[type=submit] {\n    width: 100%;\n    margin-top: 0;\n  }\n}\n</style>\n</head>\n<body>\n\n\n<h1>Add New Staff</h1>\n<div class=\"container\">\n  <form action=\"/action_page.php\">\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"fname\">First Name</label>\n      </div>\n      <div class=\"col-75\">\n        <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"lname\">Last Name</label>\n      </div>\n      <div class=\"col-75\">\n        <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"country\">Branch</label>\n      </div>\n      <div class=\"col-75\">\n        <select id=\"country\" name=\"country\">\n          <option value=\"australia\">Chennai</option>\n          <option value=\"canada\">Bangalore</option>\n          <option value=\"usa\">Mumbai</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"subject\">Description</label>\n      </div>\n      <div class=\"col-75\">\n        <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"></textarea>\n      </div>\n    </div>\n    <div class=\"row\">\n      <input type=\"submit\" value=\"Submit\">\n    </div>\n  </form>\n</div>\n\n</body>\n</html>\n\n","import { Component, OnInit } from '@angular/core';\nimport{MaterialModule} from 'src/app/material/material.module';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {AddStaffComponent } from '../add-staff/add-staff.component';\nimport {AddBranchComponent} from '../add-branch/add-branch.component';\n@Component({\n  selector: 'app-admin-function',\n  templateUrl: './admin-function.component.html',\n  styleUrls: ['./admin-function.component.css']\n})\nexport class AdminFunctionComponent  {\n\n  constructor(public dialog:MatDialog){}\n\n  openDialog1() :void{\n   \n    let dialogRef = this.dialog.open(AddStaffComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n  openDialog2() :void{\n   \n    let dialogRef = this.dialog.open(AddBranchComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n  \n\n\n}\n","\n<button class=\" text-black btn-lg \"  mat-button (click)=\"openDialog1()\">Add Staff</button>\n<button class=\" text-black btn-lg \" mat-button (click)=\"openDialog2()\">Add Branch</button>\n","import { Component, OnInit } from '@angular/core';\nimport{MaterialModule} from '../material/material.module';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {DatabaseServiceService} from '../service/database-service.service';\nimport {FormsModule} from '@angular/forms';\n\n\n\nimport {AdminFunctionComponent} from '../admin/admin-function/admin-function.component';\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  authError:any;\n\n  constructor(public dialog:MatDialog,\n    private auth:DatabaseServiceService){}\n\n  openDialog() :void{\n   \n    let dialogRef = this.dialog.open(AdminFunctionComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n\n  \nngOnInit(){\n  this.auth.eventAuthError$.subscribe(data =>{\n    this.authError=data;\n  })\n}\n\n\ncreateUser(frm){\n  this.auth.createUser(frm.value);\n}\n}","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n/* Set a style for all buttons */\nbutton {\n  background-color :aquamarine;\n  color: black;\n  padding: 14px 20px;\n  margin: 8px ;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n/* Extra styles for the cancel button */\n.cancelbtn {\n  width: auto;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Center the image and position the close button */\n.imgcontainer {\n  text-align: center;\n  margin: 24px 0 12px 0;\n  position: relative;\n}\n\nimg.avatar {\n  width: 20%;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 16px;\n}\n\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* The Modal (background) */\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  padding-top: 60px;\n}\n\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button (x) */\n.close {\n  position: absolute;\n  right: 25px;\n  top: 0;\n  color: #000;\n  font-size: 35px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: red;\n  cursor: pointer;\n}\n\n/* Add Zoom Animation */\n.animate {\n  -webkit-animation: animatezoom 0.6s;\n  animation: animatezoom 0.6s\n}\n\n@-webkit-keyframes animatezoom {\n  from {-webkit-transform: scale(0)} \n  to {-webkit-transform: scale(1)}\n}\n  \n@keyframes animatezoom {\n  from {transform: scale(0)} \n  to {transform: scale(1)}\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n     display: block;\n     float: none;\n  }\n  .cancelbtn {\n     width: 100%;\n  }\n}\n</style>\n</head>\n<body>\n\n<h2>Admin Login Form</h2>\n\n<button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Login</button>\n<button onclick=\"document.getElementById('id02').style.display='block'\" style=\"width:auto;\">SignUp</button>\n<div id=\"id01\" class=\"modal\">\n  \n  <form class=\"modal-content animate\"  method=\"post\">\n    <div class=\"imgcontainer\">\n      <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n      <img src=\"../assets/imgs/55.jpg \"  alt=\"Avatar\" class=\"avatar\">\n    </div>\n\n    <div class=\"container\">\n      <label for=\"uname\"><b>Username</b></label>\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n        \n      <button type=\"submit\" mat-button (click)=\"openDialog()\">Login</button>\n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n      </label>\n    </div>\n\n    <div class=\"container\" style=\"background-color:#f1f1f1\">\n      <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n    </div>\n  </form>\n</div>\n\n<div id=\"id02\" class=\"modal\">\n  \n  \n<span onclick=\"document.getElementById('id02').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n<div class=\"col-12\">\n<div class =\"row\" *ngIf=\"authError\">\n<div class=\"col-12 alert alert-danger\">{{authError?.message}}</div>\n</div>\n\n<form  #userRegform =\"ngForm\" (ngSubmit)=\"createUser(userRegform)\" class=\"modal-content\">\n    <div class=\"container\">\n      <h1>Sign Up</h1>\n      <p>Please fill in this form to create an account.</p>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      <label for=\"firstname\"><b>FirstName</b></label>\n      <input type=\"text\" ngModel #firstname=\"ngModel\" placeholder=\"Enter FirstName\" name=\"firstname\" required>\n        </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 mb-2\">\n      <label for=\"email\"><b>Email</b></label>\n      <input type=\"text\" ngModel #email=\"ngModel\" placeholder=\"Enter Email\" name=\"email\" required>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 mb-2\">\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\" ngModel #psw=\"ngModel\" placeholder=\"Enter Password\" name=\"psw\" required>\n</div>\n</div>\n<div class=\"row\">\n  <div class=\"col-md-6 mb-2\">\n      <label for=\"psw-repeat\"><b>Repeat Password</b></label>\n      <input type=\"password\" ngModel #pswRepeat=\"ngModel\" placeholder=\"Repeat Password\" name=\"pswRepeat\" required>\n  </div>\n  </div>\n \n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\" style=\"margin-bottom:15px\"> Remember me\n      </label>\n\n      <p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n      <div class=\"clearfix\">\n        <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n        <button type=\"submit\" class=\"signupbtn\">Sign Up</button>\n      </div>\n    </div>\n  </form>\n</div>\n</div>\n\n\n<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}\nvar modal = document.getElementById('id02');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}\n</script>\n\n</body>\n</html>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AdminComponent} from '../app/admin/admin.component';\nimport {DoctorComponent} from '../app/doctor/doctor.component';\nimport {StaffComponent} from '../app/staff/staff.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin', component : AdminComponent\n  },\n  {\n    path : 'staff', component: StaffComponent\n  },\n  {\n  path : 'doctor', component: DoctorComponent\n  },\n  \n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport{AdminComponent} from '../app/admin/admin.component';\nimport {DoctorComponent} from '../app/doctor/doctor.component';\nimport {StaffComponent} from '../app/staff/staff.component';\nimport{MaterialModule} from './material/material.module';\nimport{FormsModule} from '@angular/forms';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DialysisProject';\n\n\n\nconstructor(public dialog:MatDialog){}\n\n  openDialog1() :void{\n   \n    let dialogRef = this.dialog.open(AdminComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n\n  \n  openDialog2() :void{\n    let dialogRef = this.dialog.open(StaffComponent, {\n     \n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n\n}\nopenDialog3() :void{\n  let dialogRef = this.dialog.open(DoctorComponent, {\n   \n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n   \n\n   \n  });\n\n}\n}","<div class =\"bgimg\">\n    \n  <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"container\">\n    <!-- Brand/logo -->\n    <a class=\"navbar-brand text-warning font-weight-bold\" href=\"#\">Renal Project</a>\n    \n    <!-- Links -->\n     <button class=\"navbar toggler\" type=\"button\" data toggle=\"collapse\" data-target=\"#collapsenavbar\">\n       <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    <div class=\"collapse navbar-collapse text=center\" id=\"collapsenavbar\">\n      <ul class=\"navbar-nav ml-auto\">\n      \n      </ul>\n      </div>\n    </div>\n    </nav>\n    <div class=\"container text-center headerset\">\n      <div class=\"container\">\n        <div class=\"content\">\n      <h1 >Dialysis Solution</h1>\n       \n       \n      \n      <button class=\" text-black btn-lg \" mat-button (click)=\"openDialog1()\">Admin</button>\n      <button class=\" text-black btn-lg \" mat-button (click)=\"openDialog2()\">Staff</button>\n      <button class=\" text-black btn-lg \" mat-button (click)=\"openDialog3()\">Doctor</button>\n    </div>\n    <h3 class=\"hilo\">Please LogIn</h3>\n    </div>\n    </div> \n  \n    <section class=\"main-page\">\n    \n        <div class=\"row\">\n          <div class=\"col-12\">\n            <router-outlet></router-outlet>\n          </div>\n       \n      </div>\n      </section>\n  \n     \n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireModule } from '@angular/fire';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { StaffComponent } from './staff/staff.component';\nimport { DoctorComponent } from './doctor/doctor.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport{ MaterialModule} from './material/material.module';\nimport { AddPatientComponent } from './staff/add-patient/add-patient.component';\nimport { AddStaffComponent } from './admin/add-staff/add-staff.component';\nimport { AdminFunctionComponent } from './admin/admin-function/admin-function.component';\nimport { StaffFunctionComponent } from './staff/staff-function/staff-function.component';\nimport { PatientInfoComponent } from './staff/patient-info/patient-info.component';\nimport { AddBranchComponent } from './admin/add-branch/add-branch.component';\nimport { environment } from 'src/environments/environment';\nimport {FormsModule} from '@angular/forms';\nimport{StaffService} from '../app/service/staff.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    StaffComponent,\n    DoctorComponent,\n    AddPatientComponent,\n    AddStaffComponent,\n    AdminFunctionComponent,\n    StaffFunctionComponent,\n    PatientInfoComponent,\n    AddBranchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    FormsModule\n    \n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{MaterialModule} from '../material/material.module';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {StaffService} from '../service/staff.service';\nimport {FormsModule} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css']\n})\nexport class DoctorComponent implements OnInit {\n\n \n    authError:any;\n  \n    constructor(public dialog:MatDialog,\n      private auth:StaffService){}\n  \n      ngOnInit(){\n        this.auth.eventAuthError$.subscribe(data =>{\n          this.authError=data;\n        })\n      }\n        createUser(frm){\n          this.auth.createUser(frm.value);\n      }\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n/* Set a style for all buttons */\nbutton {\n  background-color:skyblue;\n  color: black;\n  padding: 14px 20px;\n  margin: 8px ;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n/* Extra styles for the cancel button */\n.cancelbtn {\n  width: auto;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Center the image and position the close button */\n.imgcontainer {\n  text-align: center;\n  margin: 24px 0 12px 0;\n  position: relative;\n}\n\nimg.avatar {\n  width: 30%;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 16px;\n}\n\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* The Modal (background) */\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  padding-top: 60px;\n}\n\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button (x) */\n.close {\n  position: absolute;\n  right: 25px;\n  top: 0;\n  color: #000;\n  font-size: 35px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: red;\n  cursor: pointer;\n}\n\n/* Add Zoom Animation */\n.animate {\n  -webkit-animation: animatezoom 0.6s;\n  animation: animatezoom 0.6s\n}\n\n@-webkit-keyframes animatezoom {\n  from {-webkit-transform: scale(0)} \n  to {-webkit-transform: scale(1)}\n}\n  \n@keyframes animatezoom {\n  from {transform: scale(0)} \n  to {transform: scale(1)}\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n     display: block;\n     float: none;\n  }\n  .cancelbtn {\n     width: 100%;\n  }\n}\n</style>\n</head>\n<body>\n\n<h2>Doctor Login Form</h2>\n\n<button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Login</button>\n<button onclick=\"document.getElementById('id02').style.display='block'\" style=\"width:auto;\">SignUp</button>\n<div id=\"id01\" class=\"modal\">\n  \n  <form class=\"modal-content animate\" action=\"/action_page.php\" method=\"post\">\n    <div class=\"imgcontainer\">\n      <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n      <img src=\"../assets/imgs/is.jpg \"  alt=\"Avatar\" class=\"avatar\">\n    </div>\n\n    <div class=\"container\">\n      <label for=\"uname\"><b>Username</b></label>\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n        \n      <button type=\"submit\">Login</button>\n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n      </label>\n    </div>\n\n    <div class=\"container\" style=\"background-color:#f1f1f1\">\n      <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n    </div>\n  </form>\n</div>\n\n<div id=\"id02\" class=\"modal\">\n  <span onclick=\"document.getElementById('id02').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n  \n  <div class=\"col-12\">\n    <div class =\"row\" *ngIf=\"authError\">\n    <div class=\"col-12 alert alert-danger\">{{authError?.message}}</div>\n    </div>\n  \n  <form class=\"modal-content\" #userRegform =\"ngForm\" (ngSubmit)=\"createUser(userRegform)\">\n    <div class=\"container\">\n      <h1>Sign Up</h1>\n      <p>Please fill in this form to create an account.</p>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      \n      <label for=\"email\"><b>Email</b></label>\n      <input type=\"text\"  ngModel #email=\"ngModel\" placeholder=\"Enter Email\" name=\"email\" required>\n      </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      <label for=\"specialist\"><b>Specialist</b></label>\n      <input type=\"text\"  ngModel #specialist=\"ngModel\"  placeholder=\"Enter Specialist \" name=\"specialist\" required>\n      </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      <label for=\"branch\"><b>Branch</b></label>\n      <input type=\"branch\"  ngModel #branch=\"ngModel\" placeholder=\"Enter Branch\" name=\"branch\" required>\n      </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\"  ngModel #psw=\"ngModel\" placeholder=\"Enter Password\" name=\"psw\" required>\n      </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6 mb-2\">\n      <label for=\"psw-repeat\"><b>Repeat Password</b></label>\n      <input type=\"password\"  ngModel #pswRepeat=\"ngModel\"  placeholder=\"Repeat Password\" name=\"pswRepeat\" required>\n      </div>\n      </div>\n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\" style=\"margin-bottom:15px\"> Remember me\n      </label>\n\n      <p>By creating an account you agree to our <a href=\"#\" style=\"color:dodgerblue\">Terms & Privacy</a>.</p>\n\n      <div class=\"clearfix\">\n        <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n        <button type=\"submit\" class=\"signupbtn\">Sign Up</button>\n      </div>\n    </div>\n  </form>\n</div>\n</div>\n\n\n<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}\nvar modal = document.getElementById('id02');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n  if (event.target == modal) {\n    modal.style.display = \"none\";\n  }\n}\n</script>\n\n</body>\n</html>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nconst MaterialComponent =[\n  MatDialogModule,\n  \n\n]\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MaterialComponent\n  ],\n  exports:[MaterialComponent]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport{AngularFireAuth} from '@angular/fire/auth';\nimport{AngularFirestore} from '@angular/fire/firestore';\nimport{Router} from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseServiceService {\n newUser:any;\n private eventAuthError =new BehaviorSubject<string>(\" \");\n eventAuthError$ = this.eventAuthError.asObservable();\n  constructor(private afauth:AngularFireAuth,\n    private db:AngularFirestore,\n    private router:Router) { }\n\n    createUser(user){\n      this.afauth.createUserWithEmailAndPassword(user.email,user.psw)\n      .then(userCredential =>{\n        this.newUser = user;\n\n        userCredential.user.updateProfile(\n          {\n            displayName: user.firstname + \" \"+ user.lastname\n          }\n        );\n        this.insertUserData(userCredential)\n        .then(()=>{\n          this.router.navigate(['/admin']);\n        }\n\n        );\n\n      })\n      .catch(error =>{\n        this.eventAuthError.next(error);\n      })\n    }\n    insertUserData(userCredential:firebase.auth.UserCredential){\n      return this.db.doc('users/$userCredential.user.uid').set(\n        {\n          email:this.newUser.email,\n          firstname:this.newUser.firstname,\n          pswRepeat : this.newUser.pswRepeat,\n          psw : this.newUser.psw\n        }\n      )\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport{AngularFireAuth} from '@angular/fire/auth';\nimport{AngularFirestore} from '@angular/fire/firestore';\nimport{Router} from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaffService {\n newUser:any;\n private eventAuthError =new BehaviorSubject<string>(\" \");\n eventAuthError$ = this.eventAuthError.asObservable();\n  constructor(private afauth:AngularFireAuth,\n    private db:AngularFirestore,\n    private router:Router) { }\n\n    createUser(user){\n      this.afauth.createUserWithEmailAndPassword(user.email,user.psw)\n      .then(userCredential =>{\n        this.newUser = user;\n\n        userCredential.user.updateProfile(\n          {\n            displayName: user.firstname + \" \"+ user.lastname\n          }\n        );\n        this.insertUserData(userCredential)\n        .then(()=>{\n          this.router.navigate(['/admin']);\n        }\n\n        );\n\n      })\n      .catch(error =>{\n        this.eventAuthError.next(error);\n      })\n    }\n    insertUserData(userCredential:firebase.auth.UserCredential){\n      return this.db.doc('users/$userCredential.user.uid').set(\n        {\n          email:this.newUser.email,\n           specialist: this.newUser.specialist,\n           branch: this.newUser.branch,\n          pswRepeat : this.newUser.pswRepeat,\n          psw : this.newUser.psw\n        }\n      )\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-patient',\n  templateUrl: './add-patient.component.html',\n  styleUrls: ['./add-patient.component.css']\n})\nexport class AddPatientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n* {\n  box-sizing: border-box;\n}\n\ninput[type=text], select, textarea {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n}\n\nlabel {\n  padding: 12px 12px 12px 0;\n  display: inline-block;\n}\n\ninput[type=submit] {\n  background-color: #4CAF50;\n  color: white;\n  padding: 12px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n}\n\ninput[type=submit]:hover {\n  background-color: #45a049;\n}\n\n.container {\n  border-radius: 5px;\n  background-color: #f2f2f2;\n  padding: 20px;\n}\n\n.col-25 {\n  float: left;\n  width: 25%;\n  margin-top: 6px;\n}\n\n.col-75 {\n  float: left;\n  width: 75%;\n  margin-top: 6px;\n}\n\n/* Clear floats after the columns */\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\n@media screen and (max-width: 600px) {\n  .col-25, .col-75, input[type=submit] {\n    width: 100%;\n    margin-top: 0;\n  }\n}\n</style>\n</head>\n<body>\n\n<h1>Add Patient Infomation</h1>\n\n<div class=\"container\">\n  <form action=\"/action_page.php\">\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"fname\">First Name</label>\n      </div>\n      <div class=\"col-75\">\n        <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"lname\">Last Name</label>\n      </div>\n      <div class=\"col-75\">\n        <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"country\">Country</label>\n      </div>\n      <div class=\"col-75\">\n        <select id=\"country\" name=\"Branch\">\n          <option value=\"australia\">Chennai</option>\n          <option value=\"canada\">Mumbai</option>\n          <option value=\"usa\">Bangalore</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-25\">\n        <label for=\"subject\">Subject</label>\n      </div>\n      <div class=\"col-75\">\n        <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"></textarea>\n      </div>\n    </div>\n    <div class=\"row\">\n      <input type=\"submit\" value=\"Submit\">\n    </div>\n  </form>\n</div>\n\n</body>\n</html>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-info',\n  templateUrl: './patient-info.component.html',\n  styleUrls: ['./patient-info.component.css']\n})\nexport class PatientInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>patient-info works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport{MaterialModule} from 'src/app/material/material.module';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {AddPatientComponent} from '../add-patient/add-patient.component';\nimport {PatientInfoComponent} from '../patient-info/patient-info.component';\n@Component({\n  selector: 'app-staff-function',\n  templateUrl: './staff-function.component.html',\n  styleUrls: ['./staff-function.component.css']\n})\nexport class StaffFunctionComponent  {\n\n  constructor(public dialog:MatDialog){}\n\n  openDialog1() :void{\n   \n    let dialogRef = this.dialog.open(AddPatientComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n\n  openDialog2() :void{\n   \n    let dialogRef = this.dialog.open(PatientInfoComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n\n}\n","<button class=\" text-black btn-lg \" mat-button (click)=\"openDialog1()\">Add Patient</button>\n <button class=\" text-black btn-lg \" mat-button (click)=\"openDialog2()\">Patient Info</button>\n\n","import { Component, OnInit } from '@angular/core';\nimport{MaterialModule} from '../material/material.module';\nimport {MatDialog} from '@angular/material/dialog';\nimport {  MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {StaffFunctionComponent} from './staff-function/staff-function.component';\n\n@Component({\n  selector: 'app-staff',\n  templateUrl: './staff.component.html',\n  styleUrls: ['./staff.component.css']\n})\nexport class StaffComponent  {\n  constructor(public dialog:MatDialog){}\n\n  openDialog() :void{\n   \n    let dialogRef = this.dialog.open(StaffFunctionComponent, {\n      \n    }\n\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n     \n  \n     \n    });\n  }\n\n\n \n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n/* Full-width input fields */\ninput[type=text], input[type=password] {\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n}\n\n/* Set a style for all buttons */\nbutton {\n  background-color:skyblue;\n  color: black;\n  padding: 14px 20px;\n  margin: 8px ;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n/* Extra styles for the cancel button */\n.cancelbtn {\n  width: auto;\n  padding: 10px 18px;\n  background-color: #f44336;\n}\n\n/* Center the image and position the close button */\n.imgcontainer {\n  text-align: center;\n  margin: 24px 0 12px 0;\n  position: relative;\n}\n\nimg.avatar {\n  width: 30%;\n  border-radius: 50%;\n}\n\n.container {\n  padding: 16px;\n}\n\nspan.psw {\n  float: right;\n  padding-top: 16px;\n}\n\n/* The Modal (background) */\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  padding-top: 60px;\n}\n\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button (x) */\n.close {\n  position: absolute;\n  right: 25px;\n  top: 0;\n  color: #000;\n  font-size: 35px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: red;\n  cursor: pointer;\n}\n\n/* Add Zoom Animation */\n.animate {\n  -webkit-animation: animatezoom 0.6s;\n  animation: animatezoom 0.6s\n}\n\n@-webkit-keyframes animatezoom {\n  from {-webkit-transform: scale(0)} \n  to {-webkit-transform: scale(1)}\n}\n  \n@keyframes animatezoom {\n  from {transform: scale(0)} \n  to {transform: scale(1)}\n}\n\n/* Change styles for span and cancel button on extra small screens */\n@media screen and (max-width: 300px) {\n  span.psw {\n     display: block;\n     float: none;\n  }\n  .cancelbtn {\n     width: 100%;\n  }\n}\n</style>\n</head>\n<body>\n\n<h2>Staff Login Form</h2>\n\n<button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Login</button>\n\n\n<div id=\"id01\" class=\"modal\">\n  \n  <form class=\"modal-content animate\" action=\"/action_page.php\" method=\"post\">\n    <div class=\"imgcontainer\">\n      <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n      <img src=\"../assets/imgs/23.jpg \" class=\"avatar\">\n    </div>\n\n    <div class=\"container\">\n      <label for=\"uname\"><b>Username</b></label>\n      <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required>\n\n      <label for=\"psw\"><b>Password</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n        \n      <button type=\"submit\" mat-button (click)=\"openDialog()\">Login</button>\n      <label>\n        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n      </label>\n    </div>\n\n    <div class=\"container\" style=\"background-color:#f1f1f1\">\n      <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n     \n      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n    </div>\n  </form>\n</div>\n\n\n     \n\n<script>\n// Get the modal\nvar modal = document.getElementById('id01');\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    if (event.target == modal) {\n        modal.style.display = \"none\";\n    }\n}\n\n\n</script>\n\n</body>\n</html>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyAKKy9mXllW4mK82uhEFuOTns_9lBJtnLI\",\n    authDomain: \"ginni-3b595.firebaseapp.com\",\n    databaseURL: \"https://ginni-3b595.firebaseio.com\",\n    projectId: \"ginni-3b595\",\n    storageBucket: \"ginni-3b595.appspot.com\",\n    messagingSenderId: \"72643839418\",\n    appId: \"1:72643839418:web:588e594bee2685ec4b4983\",\n    measurementId: \"G-F2C1KJJYCC\"\n}\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}